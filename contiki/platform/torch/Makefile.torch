# torch platform makefile

ifndef CONTIKI
  $(error CONTIKI not defined! You must specify where CONTIKI resides!)
endif

CONTIKI_TARGET_DIRS = . dev

CONTIKI_TARGET_SOURCEFILES += leds.c leds-arch.c
CONTIKI_TARGET_SOURCEFILES += contiki-main.c rfswitch.c

TARGET_START_SOURCEFILES += startup-gcc.c
TARGET_STARTFILES = ${addprefix $(OBJECTDIR)/,${call oname, $(TARGET_START_SOURCEFILES)}}

CONTIKI_SOURCEFILES += $(CONTIKI_TARGET_SOURCEFILES)

CLEAN += *.torch

### Unless the example dictates otherwise, build with code size optimisations
ifndef SMALL
  SMALL = 1
endif

### special rule for RTC
#FORCE:
#RTC_FLAGS = $(shell contiki-make-time)
#$(OBJECTDIR)/rv3049.o: rv3049.c FORCE | $(OBJECTDIR)
#	$(TRACE_CC)
#	$(Q)$(CC) $(CFLAGS) $(RTC_FLAGS) -c $< -o $@

### Check if we need decawave support
ifdef USE_DECAWAVE
CONTIKI_TARGET_DIRS += ../../lib/decawave
CONTIKI_TARGET_DIRS += ../../dev/dw1000
CONTIKI_TARGET_SOURCEFILES += dw1000.c
CONTIKI_TARGET_SOURCEFILES += deca_device.c deca_params_init.c deca_range_tables.c
TARGET_LIBFILES += -lm
endif

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI)/cpu/cc2538
include $(CONTIKI_CPU)/Makefile.cc2538

MODULES += core/net core/net/mac \
           core/net/mac/contikimac \
           core/net/llsec

BSL = $(CONTIKI)/tools/cc2538-bsl/cc2538-bsl.py

ifdef PORT
  PORT_FLAG = -p $(PORT)
else
  PORT_FLAG =
endif

install: all
ifeq ($(wildcard $(BSL)), )
	@echo "ERROR: Could not find the cc2538-bsl script. Did you run 'git submodule update --init' ?"
else
	python2 $(BSL) $(PORT_FLAG) -b 115200 -e -w -v $(CONTIKI_PROJECT).bin
endif
